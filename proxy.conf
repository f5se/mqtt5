# vim: set syntax=nginx ft=nginx
load_module modules/ngx_stream_js_module.so;

events { }

stream {
  js_import njs/proxy.js;
  js_var $clientid;
  js_var $username;

  # Run filter for all packets? Set to 0 to only filter CONNECT
  js_var $filter_all 1;

  # Replace connect packet by replacing username from client cert DN?
  js_var $filter_connect_ssl_dn 1;


  log_format mqtt '$remote_addr $server_port [$time_local] $protocol $status $bytes_received ' 
                  '$bytes_sent $upstream_addr $clientid $username';
  
  resolver 127.0.0.11 status_zone=docker_dns;

  upstream mqtt_brokers {
    zone mqtt 64k;
    server broker:1883 resolve;
    hash $clientid consistent;
  }

match mqtt_conn {
        # Send CONNECT packet with client ID "test"
        send   \x10\x14\x00\x04\x4d\x51\x54\x54\x05\x02\x00\x3c\x03\x21\x00\x14\x00\x04\x74\x65\x73\x74;
        expect \x20\x13\x00\x00\x10\x27\x00\x10\x00\x00\x25\x01\x2a\x01\x29\x01\x22\xff\xff\x28\x01;
}

  server {
    listen 1883;
    preread_buffer_size 1k;
    js_preread proxy.prereadMQTT;
    proxy_pass mqtt_brokers;
    proxy_connect_timeout 1s;
    proxy_timeout 5400s;
    health_check match=mqtt_conn;

    access_log /var/log/nginx/mqtt_access.log mqtt;
    error_log  /var/log/nginx/mqtt_error.log info; # NGINX JavaScript debug logging
    status_zone MQTT_Traffic;
  }

  server {
    listen 8883 ssl;
    ssl_certificate /mtls/server.crt;
    ssl_certificate_key /mtls/server.key;
    ssl_client_certificate  /mtls/ca.crt;
    ssl_verify_client       optional;
    ssl_verify_depth        2;

    preread_buffer_size 1k;
    js_filter proxy.filterMQTT;
    proxy_pass mqtt_brokers;
    proxy_connect_timeout 1s;
    proxy_timeout 5400s;

    access_log /var/log/nginx/mqtt_access.log mqtt;
    error_log  /var/log/nginx/mqtt_error.log info; # NGINX JavaScript debug logging
    status_zone MQTTS_Traffic;
  }
}

http {
  include       /etc/nginx/mime.types; 
  server {
    listen 80;
    status_zone mgmt_traffic;

    location /api {
      api write=on;
    }
    location /dashboard.html {
      root   /usr/share/nginx/html;
    }
  }
}
