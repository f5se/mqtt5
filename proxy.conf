# vim: set syntax=nginx ft=nginx
load_module modules/ngx_stream_js_module.so;

events { }

stream {

  keyval_zone zone=demo:32k state=/var/lib/nginx/state/demo.keyval;
  keyval "name" $demo_service zone=demo;

  error_log  /var/log/nginx/mqtt_error.log info; # NGINX JavaScript debug logging

  map $demo_service $demo_loop {
    clientid_cn_mod       127.0.0.1:8001;
    properties_routing    127.0.0.1:8003;
    default               127.0.0.1:8001;
  }

  map $demo_service $demo_loop_ssl {
    clientid_cn_mod       127.0.0.1:8002;
    properties_routing    127.0.0.1:8004;
    default               127.0.0.1:8002;
  }

  # log format including clientid and username
  js_var $clientid;
  js_var $username;
  log_format mqtt '$remote_addr $server_port [$time_local] $protocol $status $bytes_received ' 
                  '$bytes_sent $upstream_addr $clientid $username';

  resolver 127.0.0.11 status_zone=docker_dns;

  upstream mqtt_brokers {
    zone mqtt 64k;
    server broker:1883 resolve;
    hash $clientid consistent;
  }

  match mqtt_conn {
        # Send CONNECT packet with client ID "test"
        send   \x10\x14\x00\x04\x4d\x51\x54\x54\x05\x02\x00\x3c\x03\x21\x00\x14\x00\x04\x74\x65\x73\x74;
        expect \x20\x13\x00\x00\x10\x27\x00\x10\x00\x00\x25\x01\x2a\x01\x29\x01\x22\xff\xff\x28\x01;
  }

  server {
    listen 1883;
    proxy_pass $demo_loop;
    proxy_connect_timeout 1s;
    proxy_timeout 5400s;
  }

  server {
    listen 8883;
    proxy_pass $demo_loop_ssl;
    proxy_connect_timeout 1s;
    proxy_timeout 5400s;
  }

  include stream.conf.d/*.conf;

}

http {
  include       /etc/nginx/mime.types; 
  server {
    listen 80;
    status_zone mgmt_traffic;

    location /api {
      api write=on;
    }
    location /dashboard.html {
      root   /usr/share/nginx/html;
    }
  }
}
